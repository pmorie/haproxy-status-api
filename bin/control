#!/bin/bash -ex

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source "${OPENSHIFT_HAPROXYSTATUSAPI_DIR}/lib/util"

HTTPD_CFG_FILE=$OPENSHIFT_HAPROXYSTATUSAPI_DIR/etc/conf/httpd_nolog.conf

function start() {
    echo "Starting HAProxy Status API cart"
    /usr/sbin/httpd -C "Include $OPENSHIFT_HAPROXYSTATUSAPI_DIR/etc/conf.d/*.conf" -f $HTTPD_CFG_FILE -k start
}

function stop() {
    echo "Stopping HAProxy Status API cart"

    CART_CONF_DIR=${OPENSHIFT_HAPROXYSTATUSAPI_DIR}/etc/conf

    # Stop the app
    # src_user_hook pre_stop_${cartridge_type}
    app_userid=`id -u`
    set +e
    httpd_pid=`cat ${OPENSHIFT_HAPROXYSTATUSAPI_DIR}/run/httpd.pid 2> /dev/null`
    set -e

    /usr/sbin/httpd -C "Include $OPENSHIFT_HAPROXYSTATUSAPI_DIR/etc/conf.d/*.conf" -f $HTTPD_CFG_FILE -k stop

    for i in {1..20}
    do
        if `ps --pid $httpd_pid > /dev/null 2>&1`  ||  \
           `pgrep -u $app_userid Passenger.* > /dev/null 2>&1`
        then
            if [ $i -gt 4 ]
            then
                if `ps --pid $httpd_pid > /dev/null 2>&1`
                then
                    if [ $i -gt 16 ]
                    then
                        set +e
                        /bin/kill -9 $httpd_pid
                        set -e
                    fi
                elif `pgrep -u $app_userid Passenger.* > /dev/null 2>&1`
                then
                    set +e
                    pkill -9 -u $app_userid Passenger.*
                    set -e
                    break
                fi
            fi
            echo "Waiting for stop to finish"
            sleep .5
        else
            break
        fi
    done

}

function restart() {
    echo "${1}ing HAProxy Status API cart"
    touch $OPENSHIFT_HAPROXYSTATUSAPI_DIR/app/tmp/restart.txt
    /usr/sbin/httpd -C "Include $OPENSHIFT_HAPROXYSTATUSAPI_DIR/etc/conf.d/*.conf" -f $HTTPD_CFG_FILE -k restart
}

function status() {
   if output=$(curl http://$OPENSHIFT_HAPROXYSTATUSAPI_IP:$OPENSHIFT_HAPROXYSTATUSAPI_PORT/ &> /dev/null)
   then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}


case "$1" in
  start)             start ;;
  stop)              stop ;;
  restart | reload ) restart $1 ;;
  status)            status ;;
  *)                 exit 0
esac
